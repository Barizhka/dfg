import logging
from aiogram import Bot, Dispatcher, types
from aiogram.utils import executor
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, WebAppInfo
from config import *
logging.basicConfig(level=logging.INFO)

bot = Bot(token=bottoken)
dp = Dispatcher(bot)

@dp.message_handler(commands=['start'])
async def send_welcome(message: types.Message):
    with open('image.png', 'rb') as photo:
        keyboard = InlineKeyboardMarkup(row_width=1)
        web_app_button = InlineKeyboardButton(
            text="–û—Ç–∫—Ä—ã—Ç—å –∫–µ–π—Å",
            web_app=WebAppInfo(url=weburl) 
        )
        channel_button = InlineKeyboardButton(
            text="–ù–∞—à –∫–∞–Ω–∞–ª",
            url=youchannel
        )
        keyboard.add(web_app_button, channel_button)
        
        await message.answer_photo(
            photo,
            caption="üéÅüéÅüéÅ\n\n–î–û–ë–†–û –ü–û–ñ–ê–õ–û–í–ê–¢–¨\n\n–ê–∫—Ç—É–∞–ª—å–Ω—ã–µ —Ä–∞–∑–¥–∞—á–∏:\n\nüíç –ö–æ–ª—å—Ü–æ –∑–∞ –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ –∫–∞–Ω–∞–ª.\n—Å—Ç–æ–∏–º. 100 ‚≠êÔ∏è\n\nüîπ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è: /help\nüîπ –í—ã–∑–≤–∞—Ç—å –º–µ–Ω—é –ø–æ–≤—Ç–æ—Ä–Ω–æ: /start",
            reply_markup=keyboard
        )

@dp.message_handler(commands=['help'])
async def send_help(message: types.Message):
    keyboard = InlineKeyboardMarkup()
    back_button = InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data="back_to_start")
    keyboard.add(back_button)
    
    await message.answer(
        f"‚ùî‚ùî‚ùî\n\n–ò–ù–°–¢–†–£–ö–¶–ò–Ø:\n\n1Ô∏è‚É£ –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏\n2Ô∏è‚É£ –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –≤–∫–ª–∞–¥–∫—É Telegram –î–ª—è –±–∏–∑–Ω–µ—Å–∞\n3Ô∏è‚É£ –í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª –ß–∞—Ç-–±–æ—Ç—ã\n4Ô∏è‚É£ –í –ø–æ–∏—Å–∫–æ–≤—É—é —Å—Ç—Ä–æ–∫—É –≤–≤–µ–¥–∏—Ç–µ @{youbot}\n5Ô∏è‚É£ –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –î–æ–±–∞–≤–∏—Ç—å \n‚òëÔ∏è –ü–æ—Å—Ç–∞–≤—å—Ç–µ –≥–∞–ª–æ—á–∫—É —Ä—è–¥–æ–º —Å –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–¥–∞—Ä–∫–∞–º–∏ –∏ –∑–≤–µ–∑–¥–∞–º–∏\n\n‚úÖ –í—Å–µ –≥–æ—Ç–æ–≤–æ! –ë–æ—Ç –¥–æ–ª–∂–µ–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤–∞–º –Ω–∞–≥—Ä–∞–¥—É –µ—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω–∏–ª–∏ —É—Å–ª–æ–≤–∏—è —Ä–∞–∑–¥–∞—á–∏\n\n‚≠ïÔ∏è –í–ê–ñ–ù–û: –ß—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –∞–±—É–∑–∞ –Ω–∞—à–µ–π —Å–∏—Å—Ç–µ–º—ã, –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∏—Ç—å —Ä–∞–∑–¥–∞—á—É —Ç–æ–ª—å–∫–æ –∏–º–µ—è –ø—Ä–µ–º–∏—É–º-—Å—Ç–∞—Ç—É—Å –≤ Telegram",
        reply_markup=keyboard
    )

@dp.callback_query_handler(lambda c: c.data == 'back_to_start')
async def process_callback_back(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    await send_welcome(callback_query.message)

if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)